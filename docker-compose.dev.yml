# Development Docker Compose
# This version is optimized for development with hot reloading and debugging

version: '3.8'

services:
  # MongoDB database
  mongodb:
    image: mongo:7.0
    container_name: lancall-mongodb-dev
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: vc
    ports:
      - "27017:27017"
    volumes:
      - mongodb_dev_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - lancall-dev-network

  # LanCall application (development mode)
  lancall-app-dev:
    image: golang:1.24.5-alpine
    container_name: lancall-app-dev
    restart: unless-stopped
    working_dir: /app
    command: |
      sh -c "
        apk add --no-cache git ca-certificates &&
        go mod download &&
        go run main.go
      "
    ports:
      - "3000:3000"
    environment:
      - MONGO_URI=mongodb://admin:password123@mongodb:27017/vc?authSource=admin
      - CGO_ENABLED=0
    volumes:
      - .:/app
      - go_mod_cache:/go/pkg/mod
    depends_on:
      - mongodb
    networks:
      - lancall-dev-network

  # MongoDB Admin UI (optional)
  mongo-express:
    image: mongo-express:latest
    container_name: lancall-mongo-express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb
    networks:
      - lancall-dev-network

networks:
  lancall-dev-network:
    driver: bridge

volumes:
  mongodb_dev_data:
    driver: local
  go_mod_cache:
    driver: local
